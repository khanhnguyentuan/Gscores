services:
  # Backend service - NestJS API
  - type: web
    name: g-scores-backend
    runtime: node
    buildCommand: npm install -g @nestjs/cli && npm install && npm run build
    startCommand: npm run start:prod
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_HOST
        fromDatabase:
          name: g-scores-db
          property: host
      - key: DATABASE_USER
        fromDatabase:
          name: g-scores-db
          property: user
      - key: DATABASE_PASSWORD
        fromDatabase:
          name: g-scores-db
          property: password
      - key: DATABASE_NAME
        fromDatabase:
          name: g-scores-db
          property: database
      - key: DATABASE_PORT
        fromDatabase:
          name: g-scores-db
          property: port
      - key: DATABASE_TYPE
        value: postgres
    rootDir: backend
    healthCheckPath: /api/health

  # Frontend static site - React
  - type: web
    name: g-scores-frontend
    runtime: node
    buildCommand: npm install && npm run build
    startCommand: npx serve -s build
    envVars:
      - key: REACT_APP_API_URL
        value: https://g-scores-backend.onrender.com
    rootDir: frontend

# Database PostgreSQL (Render managed database)
databases:
  - name: g-scores-db
    databaseName: g_scores
    plan: free
    ipAllowList: [] 